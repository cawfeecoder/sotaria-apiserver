// +build !ignore_autogenerated

/*
Copyright Nicholas Frush.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	sotaria "github.com/nfrush/sotaria-apiserver/pkg/apis/sotaria"
	v1 "k8s.io/api/core/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Project)(nil), (*sotaria.Project)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_Project_To_sotaria_Project(a.(*Project), b.(*sotaria.Project), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sotaria.Project)(nil), (*Project)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sotaria_Project_To_v1alpha1_Project(a.(*sotaria.Project), b.(*Project), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ProjectList)(nil), (*sotaria.ProjectList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ProjectList_To_sotaria_ProjectList(a.(*ProjectList), b.(*sotaria.ProjectList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sotaria.ProjectList)(nil), (*ProjectList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sotaria_ProjectList_To_v1alpha1_ProjectList(a.(*sotaria.ProjectList), b.(*ProjectList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ProjectSpec)(nil), (*sotaria.ProjectSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ProjectSpec_To_sotaria_ProjectSpec(a.(*ProjectSpec), b.(*sotaria.ProjectSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sotaria.ProjectSpec)(nil), (*ProjectSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sotaria_ProjectSpec_To_v1alpha1_ProjectSpec(a.(*sotaria.ProjectSpec), b.(*ProjectSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ProjectStatus)(nil), (*sotaria.ProjectStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ProjectStatus_To_sotaria_ProjectStatus(a.(*ProjectStatus), b.(*sotaria.ProjectStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*sotaria.ProjectStatus)(nil), (*ProjectStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_sotaria_ProjectStatus_To_v1alpha1_ProjectStatus(a.(*sotaria.ProjectStatus), b.(*ProjectStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_Project_To_sotaria_Project(in *Project, out *sotaria.Project, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ProjectSpec_To_sotaria_ProjectSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ProjectStatus_To_sotaria_ProjectStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_Project_To_sotaria_Project is an autogenerated conversion function.
func Convert_v1alpha1_Project_To_sotaria_Project(in *Project, out *sotaria.Project, s conversion.Scope) error {
	return autoConvert_v1alpha1_Project_To_sotaria_Project(in, out, s)
}

func autoConvert_sotaria_Project_To_v1alpha1_Project(in *sotaria.Project, out *Project, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_sotaria_ProjectSpec_To_v1alpha1_ProjectSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_sotaria_ProjectStatus_To_v1alpha1_ProjectStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_sotaria_Project_To_v1alpha1_Project is an autogenerated conversion function.
func Convert_sotaria_Project_To_v1alpha1_Project(in *sotaria.Project, out *Project, s conversion.Scope) error {
	return autoConvert_sotaria_Project_To_v1alpha1_Project(in, out, s)
}

func autoConvert_v1alpha1_ProjectList_To_sotaria_ProjectList(in *ProjectList, out *sotaria.ProjectList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]sotaria.Project)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1alpha1_ProjectList_To_sotaria_ProjectList is an autogenerated conversion function.
func Convert_v1alpha1_ProjectList_To_sotaria_ProjectList(in *ProjectList, out *sotaria.ProjectList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ProjectList_To_sotaria_ProjectList(in, out, s)
}

func autoConvert_sotaria_ProjectList_To_v1alpha1_ProjectList(in *sotaria.ProjectList, out *ProjectList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]Project)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_sotaria_ProjectList_To_v1alpha1_ProjectList is an autogenerated conversion function.
func Convert_sotaria_ProjectList_To_v1alpha1_ProjectList(in *sotaria.ProjectList, out *ProjectList, s conversion.Scope) error {
	return autoConvert_sotaria_ProjectList_To_v1alpha1_ProjectList(in, out, s)
}

func autoConvert_v1alpha1_ProjectSpec_To_sotaria_ProjectSpec(in *ProjectSpec, out *sotaria.ProjectSpec, s conversion.Scope) error {
	out.Finalizers = *(*[]v1.FinalizerName)(unsafe.Pointer(&in.Finalizers))
	return nil
}

// Convert_v1alpha1_ProjectSpec_To_sotaria_ProjectSpec is an autogenerated conversion function.
func Convert_v1alpha1_ProjectSpec_To_sotaria_ProjectSpec(in *ProjectSpec, out *sotaria.ProjectSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ProjectSpec_To_sotaria_ProjectSpec(in, out, s)
}

func autoConvert_sotaria_ProjectSpec_To_v1alpha1_ProjectSpec(in *sotaria.ProjectSpec, out *ProjectSpec, s conversion.Scope) error {
	out.Finalizers = *(*[]v1.FinalizerName)(unsafe.Pointer(&in.Finalizers))
	return nil
}

// Convert_sotaria_ProjectSpec_To_v1alpha1_ProjectSpec is an autogenerated conversion function.
func Convert_sotaria_ProjectSpec_To_v1alpha1_ProjectSpec(in *sotaria.ProjectSpec, out *ProjectSpec, s conversion.Scope) error {
	return autoConvert_sotaria_ProjectSpec_To_v1alpha1_ProjectSpec(in, out, s)
}

func autoConvert_v1alpha1_ProjectStatus_To_sotaria_ProjectStatus(in *ProjectStatus, out *sotaria.ProjectStatus, s conversion.Scope) error {
	out.Phase = v1.NamespacePhase(in.Phase)
	return nil
}

// Convert_v1alpha1_ProjectStatus_To_sotaria_ProjectStatus is an autogenerated conversion function.
func Convert_v1alpha1_ProjectStatus_To_sotaria_ProjectStatus(in *ProjectStatus, out *sotaria.ProjectStatus, s conversion.Scope) error {
	return autoConvert_v1alpha1_ProjectStatus_To_sotaria_ProjectStatus(in, out, s)
}

func autoConvert_sotaria_ProjectStatus_To_v1alpha1_ProjectStatus(in *sotaria.ProjectStatus, out *ProjectStatus, s conversion.Scope) error {
	out.Phase = v1.NamespacePhase(in.Phase)
	return nil
}

// Convert_sotaria_ProjectStatus_To_v1alpha1_ProjectStatus is an autogenerated conversion function.
func Convert_sotaria_ProjectStatus_To_v1alpha1_ProjectStatus(in *sotaria.ProjectStatus, out *ProjectStatus, s conversion.Scope) error {
	return autoConvert_sotaria_ProjectStatus_To_v1alpha1_ProjectStatus(in, out, s)
}
